# -*- coding: utf-8 -*-
"""Sentiment_ES.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bHAzzRu9Jhbr-XbHuGDstl5Kp6Pgr8bf
"""

pip install sentiment-analysis-spanish

import pandas as pd
import re
import matplotlib.pyplot as plt

df = pd.read_csv("es.csv")

df.shape

df = df.drop(columns=['Unnamed: 0'])

df.head()

df.text = df.text.str.lower()

df.head()

pip install googletrans

from googletrans import Translator

translator = Translator()

df['English_tweet'] = df['text'].apply(translator.translate, src='es', dest='en').apply(getattr, args=('text',))

df.head()

df.to_csv('es_2.csv', index=False)

df = pd.read_csv('es_2.csv')

df.shape

df.head()

import nltk
nltk.download('vader_lexicon')
from nltk.sentiment.vader import SentimentIntensityAnalyzer as SentimentAnalyzer

nltk.download('punkt')
nltk.download('stopwords')
from nltk.corpus import stopwords

from wordcloud import WordCloud
import matplotlib.pyplot as plt

df.English_tweet = df.English_tweet.str.lower()

df['text_processed'] = df['English_tweet'].replace("http\S+"," ", regex = True)

df.text_processed = df.text_processed.replace(r'[^\w]'," ", regex = True)

df.text_processed = df.text_processed.replace(r'\d+'," ", regex = True)

df['text_processed'] = df['text_processed'].astype(str).map(lambda x: re.sub(r'\b\w{1}\b', '', x))

df.text_processed = df.text_processed.replace(r'\s+'," ", regex = True)

df.text_processed = df.text_processed.str.lstrip()

df.text_processed = df.text_processed.str.rstrip()

df.head(3)

"""Sentiment Analysis"""

sentiment_analyzer = SentimentAnalyzer()

def sentiment_to_label(sentiment_value):
    if( -1 <= sentiment_value <= -0.5):
      return "fortemente negativa"
    elif( -0.5 < sentiment_value < 0):
      return "negativa"
    elif(sentiment_value == 0):
      return "neutra"
    elif( 0 < sentiment_value < 0.5):
      return "positiva"
    elif(sentiment_value >= 0.5):
      return "fortemente positiva"

df_sentiment = df.text_processed.apply(lambda review: sentiment_analyzer.polarity_scores(review))

df['sentiment_score'] = df_sentiment.apply(lambda sentiment: sentiment["compound"])

df.head()

df['sentiment_label'] = df['sentiment_score'].apply(lambda sentiment: sentiment_to_label(sentiment))
df.head()

"""Neutro"""

df[df['sentiment_label'] == 'neutra'].English_tweet.iloc[4]

df[df['sentiment_label'] == 'neutra'].text.iloc[4]

"""F_neg"""

df[df['sentiment_label'] == 'fortemente negativa'].text_processed.iloc[11]

df[df['sentiment_label'] == 'fortemente negativa'].text.iloc[11]

"""Neg"""

df[df['sentiment_label'] == 'negativa'].English_tweet.iloc[22]

df[df['sentiment_label'] == 'negativa'].text.iloc[22]

"""F_pos"""

df[df['sentiment_label'] == 'fortemente positiva'].English_tweet.iloc[4]

df[df['sentiment_label'] == 'fortemente positiva'].text.iloc[4]

"""Pos"""

df[df['sentiment_label'] == 'positiva'].English_tweet.iloc[9]

df[df['sentiment_label'] == 'positiva'].text.iloc[9]

"""Nairobi"""

Nairobi = df[df['text'].str.contains("nairobi")]

Nairobi.head()

Nairobi.shape

Nairobi = Nairobi.reset_index(drop=True)

len(Nairobi[Nairobi['sentiment_label'] == 'fortemente negativa'])

len(Nairobi[Nairobi['sentiment_label'] == 'negativa'])

len(Nairobi[Nairobi['sentiment_label'] == 'neutra'])

len(Nairobi[Nairobi['sentiment_label'] == 'positiva'])

len(Nairobi[Nairobi['sentiment_label'] == 'fortemente positiva'])

299 + 336 + 813 + 219 + 228

"""Professore"""

Prof = df[df['text'].str.contains("el profesor|profesor")]

Prof.shape

Prof = Prof.reset_index(drop=True)

len(Prof[Prof['sentiment_label'] == 'fortemente negativa'])

len(Prof[Prof['sentiment_label'] == 'negativa'])

len(Prof[Prof['sentiment_label'] == 'neutra'])

len(Prof[Prof['sentiment_label'] == 'positiva'])

len(Prof[Prof['sentiment_label'] == 'fortemente positiva'])

97+135+465+167+127

"""Berlino"""

Berlino = df[df['text'].str.contains("berlín|berlin")]

Berlino.shape

Berlino = Berlino.reset_index(drop=True)

len(Berlino[Berlino['sentiment_label'] == 'fortemente negativa'])

len(Berlino[Berlino['sentiment_label'] == 'negativa'])

len(Berlino[Berlino['sentiment_label'] == 'neutra'])

len(Berlino[Berlino['sentiment_label'] == 'positiva'])

len(Berlino[Berlino['sentiment_label'] == 'fortemente positiva'])

71+122+380+129+172

"""Tokyo"""

Tokyo = df[df['text'].str.contains("tokyo|tokio")]

Tokyo.shape

Tokyo = Tokyo.reset_index(drop=True)

len(Tokyo[Tokyo['sentiment_label'] == 'fortemente negativa'])

len(Tokyo[Tokyo['sentiment_label'] == 'negativa'])

len(Tokyo[Tokyo['sentiment_label'] == 'neutra'])

len(Tokyo[Tokyo['sentiment_label'] == 'positiva'])

len(Tokyo[Tokyo['sentiment_label'] == 'fortemente positiva'])

133+175+360+119+107

"""Rio"""

Rio = df[df['text'].str.contains("río|rio")]

Rio.shape

len(Rio[Rio['sentiment_label'] == 'fortemente negativa'])

len(Rio[Rio['sentiment_label'] == 'negativa'])

len(Rio[Rio['sentiment_label'] == 'neutra'])

len(Rio[Rio['sentiment_label'] == 'positiva'])

len(Rio[Rio['sentiment_label'] == 'fortemente positiva'])

161+213+374+145+120

"""Arturo"""

Arturo = df[df['text'].str.contains("arturo|arturito|arturo román")]

Arturo.shape

len(Arturo[Arturo['sentiment_label'] == 'fortemente negativa'])

len(Arturo[Arturo['sentiment_label'] == 'negativa'])

len(Arturo[Arturo['sentiment_label'] == 'neutra'])

len(Arturo[Arturo['sentiment_label'] == 'positiva'])

len(Arturo[Arturo['sentiment_label'] == 'fortemente positiva'])

200+149+402+77+46

"""Denver"""

Denver = df[df['text'].str.contains("denver")]

len(Denver)

len(Denver[Denver['sentiment_label'] == 'fortemente negativa'])

len(Denver[Denver['sentiment_label'] == 'negativa'])

len(Denver[Denver['sentiment_label'] == 'neutra'])

len(Denver[Denver['sentiment_label'] == 'positiva'])

len(Denver[Denver['sentiment_label'] == 'fortemente positiva'])

36+47+153+41+56

"""A.Sierra"""

A_sierra = df[df['text'].str.contains("alicia sierra|alicia|sierra|alicia sierra montes")]

len(A_sierra)

len(A_sierra[A_sierra['sentiment_label'] == 'fortemente negativa'])

len(A_sierra[A_sierra['sentiment_label'] == 'negativa'])

len(A_sierra[A_sierra['sentiment_label'] == 'neutra'])

len(A_sierra[A_sierra['sentiment_label'] == 'positiva'])

len(A_sierra[A_sierra['sentiment_label'] == 'fortemente positiva'])

71+85+282+95+72

"""Gandia"""

Gandia = df[df['text'].str.contains("césar gandía|cesar gandia|gandia")]
Gandia.shape

len(Gandia[Gandia['sentiment_label'] == 'fortemente negativa'])

len(Gandia[Gandia['sentiment_label'] == 'negativa'])

len(Gandia[Gandia['sentiment_label'] == 'neutra'])

len(Gandia[Gandia['sentiment_label'] == 'positiva'])

len(Gandia[Gandia['sentiment_label'] == 'fortemente positiva'])

58+35+100+26+16

"""Helsinki"""

Helsinki = df[df['text'].str.contains("helsinki")]
Helsinki.shape

len(Helsinki[Helsinki['sentiment_label'] == 'fortemente negativa'])

len(Helsinki[Helsinki['sentiment_label'] == 'negativa'])

len(Helsinki[Helsinki['sentiment_label'] == 'neutra'])

len(Helsinki[Helsinki['sentiment_label'] == 'positiva'])

len(Helsinki[Helsinki['sentiment_label'] == 'fortemente positiva'])

30+32+105+41+94

"""Palermo"""

Palermo = df[df['text'].str.contains("palermo")]
Palermo.shape

len(Palermo[Palermo['sentiment_label'] == 'fortemente negativa'])

len(Palermo[Palermo['sentiment_label'] == 'negativa'])

len(Palermo[Palermo['sentiment_label'] == 'neutra'])

len(Palermo[Palermo['sentiment_label'] == 'positiva'])

len(Palermo[Palermo['sentiment_label'] == 'fortemente positiva'])

61+87+201+63+56

"""Manila"""

Manila = df[df['text'].str.contains("manila")]
Manila.shape

len(Manila[Manila['sentiment_label'] == 'fortemente negativa'])

len(Manila[Manila['sentiment_label'] == 'negativa'])

len(Manila[Manila['sentiment_label'] == 'neutra'])

len(Manila[Manila['sentiment_label'] == 'positiva'])

len(Manila[Manila['sentiment_label'] == 'fortemente positiva'])

7+11+37+17+11

"""Lisbona"""

Lisbona = df[df['text'].str.contains("lisbon|lisbona|lisboa")]
Lisbona.shape

len(Lisbona[Lisbona['sentiment_label'] == 'fortemente negativa'])

len(Lisbona[Lisbona['sentiment_label'] == 'negativa'])

len(Lisbona[Lisbona['sentiment_label'] == 'neutra'])

len(Lisbona[Lisbona['sentiment_label'] == 'positiva'])

len(Lisbona[Lisbona['sentiment_label'] == 'fortemente positiva'])

24+29+82+21+33

"""Mosca"""

Mosca = df[df['text'].str.contains("moscú|moscù|moscu")]
Mosca.shape

len(Mosca[Mosca['sentiment_label'] == 'fortemente negativa'])

len(Mosca[Mosca['sentiment_label'] == 'negativa'])

len(Mosca[Mosca['sentiment_label'] == 'neutra'])

len(Mosca[Mosca['sentiment_label'] == 'positiva'])

len(Mosca[Mosca['sentiment_label'] == 'fortemente positiva'])

14+9+24+7+8

"""Oslo"""

Oslo = df[df['text'].str.contains("oslo")]
Oslo.shape

len(Oslo[Oslo['sentiment_label'] == 'fortemente negativa'])

len(Oslo[Oslo['sentiment_label'] == 'negativa'])

len(Oslo[Oslo['sentiment_label'] == 'neutra'])

len(Oslo[Oslo['sentiment_label'] == 'positiva'])

len(Oslo[Oslo['sentiment_label'] == 'fortemente positiva'])

4+5+16+3+7

"""Bogotà"""

Bogotà = df[df['text'].str.contains("bogotá|bogotà")]
Bogotà.shape

len(Bogotà[Bogotà['sentiment_label'] == 'fortemente negativa'])

len(Bogotà[Bogotà['sentiment_label'] == 'negativa'])

len(Bogotà[Bogotà['sentiment_label'] == 'neutra'])

len(Bogotà[Bogotà['sentiment_label'] == 'positiva'])

len(Bogotà[Bogotà['sentiment_label'] == 'fortemente positiva'])

8+8+72+13+24

"""Marsiglia"""

Marsiglia = df[df['text'].str.contains("marsella")]
Marsiglia.shape

len(Marsiglia[Marsiglia['sentiment_label'] == 'fortemente negativa'])

len(Marsiglia[Marsiglia['sentiment_label'] == 'negativa'])

len(Marsiglia[Marsiglia['sentiment_label'] == 'neutra'])

len(Marsiglia[Marsiglia['sentiment_label'] == 'positiva'])

len(Marsiglia[Marsiglia['sentiment_label'] == 'fortemente positiva'])

6+24+48+12+24

"""Stoccolma"""

Stoccolma = df[df['text'].str.contains("estocolmo")]
Stoccolma.shape

len(Stoccolma[Stoccolma['sentiment_label'] == 'fortemente negativa'])

len(Stoccolma[Stoccolma['sentiment_label'] == 'negativa'])

len(Stoccolma[Stoccolma['sentiment_label'] == 'neutra'])

len(Stoccolma[Stoccolma['sentiment_label'] == 'positiva'])

len(Stoccolma[Stoccolma['sentiment_label'] == 'fortemente positiva'])

10+13+29+10+16

Personaggio = ['Nairobi', 'Professore', 'Berlino', 'Tokyio', 'Rio', 'Arturo', 'Denver', 'Alicia Sierra', 'Gandia', 'Helsinki', 'Palermo', 'Manila',
               'Lisbona', 'Mosca', 'Oslo', 'Bogotà', 'Marsiglia', 'Stoccolma']
Fortemente_negativo = [299, 97, 71,133, 161, 200, 36, 71, 58, 30, 61, 7, 24, 14, 4, 8, 6, 10]
Negativo = [336, 135, 122, 175,213, 149, 47, 85, 35, 32, 87, 11, 29, 9, 5, 8, 24, 13]
Neutro = [813, 465, 380, 360, 374, 402, 153, 282, 100, 105, 201, 37, 82, 24, 16, 72, 48, 29]
Positivo = [219, 167, 129, 119, 145, 77, 41, 95, 26, 41, 63, 17, 21, 7, 3, 13, 12, 10]
Fortemente_positivo = [228, 127, 172, 107,120, 46, 56, 72, 16, 94, 56, 11, 33, 8, 7, 24, 24, 16]
N_tweet = [1895, 991, 874, 894, 1013, 874, 333, 605, 235, 302, 468, 83, 189, 62, 35, 125, 114, 78]

list_of_tuples = list(zip(Personaggio, Fortemente_negativo, Negativo, Neutro, Positivo, Fortemente_positivo, N_tweet))

risultati = pd.DataFrame(list_of_tuples, columns = ['Personaggio', "Fortemente_negativo", "Negativo", "Neutro", "Positivo", "Fortemente_positivo",
                                                    "N_tweet"])
risultati

category_labels = risultati.Personaggio

prova = risultati

totals = [i+j+k+l+m for i,j,k,l,m in zip(prova['Fortemente_negativo'], prova['Negativo'], prova['Neutro'], prova['Positivo'], prova['Fortemente_positivo'])]

F_neg = [i / j * 100 for i,j in zip(prova['Fortemente_negativo'], totals)]

Neg = [i / j * 100 for i,j in zip(prova['Negativo'], totals)]

Neu = [i / j * 100 for i,j in zip(prova['Neutro'], totals)]

Pos = [i / j * 100 for i,j in zip(prova['Positivo'], totals)]

F_pos = [i / j * 100 for i,j in zip(prova['Fortemente_positivo'], totals)]

a = 17

F_neg[a]

Neg[a]

Neu[a]

Pos[a]

F_pos[a]

#13, 17, 37, 13, 21
13+17+36+13+21

import numpy as np
import matplotlib.pyplot as plt


category_names = ['Fortemente negativo', "Negativo", "Neutro", "Positivo", 'Fortemente positivo']
results = {
    'Nairobi': [16, 18, 42, 12, 12],
    'Professore': [9, 13, 46, 17, 15],
    'Berlino':[8, 14, 43, 15, 20], 
    'Tokyio':[15, 20, 40, 13, 12], 
    'Rio': [16, 21, 37, 14, 12],
    'Arturo': [23, 18, 45, 9, 5],
    'Denver': [11, 14, 45, 12, 18], 
    'Alicia Sierra': [12, 14, 46, 16, 12],
    'Gandia': [25, 15, 42, 11, 7], 
    'Helsinki': [10, 11, 34, 14, 31],
    'Palermo': [13, 19, 42, 14, 12], 
    'Manila': [8, 13, 44, 22, 13],
    'Lisbona': [13, 15, 43, 11, 18],
    'Mosca': [23, 15, 38, 11, 13],
    'Oslo': [11, 14, 46, 9, 20],
    'Bogotà': [6, 6, 57, 11, 20],
    'Marsiglia': [5, 21, 42, 11, 21],
    'Stoccolma': [13, 17, 36, 13, 21]
}


def survey(results, category_names):
    labels = list(results.keys())
    data = np.array(list(results.values()))
    data_cum = data.cumsum(axis=1)
    category_colors = plt.get_cmap('RdYlGn')(
        np.linspace(0.15, 0.85, data.shape[1]))

    fig, ax = plt.subplots(figsize=(9.2, 7))
    ax.invert_yaxis()
    ax.xaxis.set_visible(False)
    ax.set_xlim(0, np.sum(data, axis=1).max())

    for i, (colname, color) in enumerate(zip(category_names, category_colors)):
        widths = data[:, i]
        starts = data_cum[:, i] - widths
        ax.barh(labels, widths, left=starts, height=0.5,
                label=colname, color=color)
        xcenters = starts + widths / 2

        r, g, b, _ = color
        text_color = 'white' if r * g * b < 0.5 else 'darkgrey'
        for y, (x, c) in enumerate(zip(xcenters, widths)):
            ax.text(x, y, str(int(c)), ha='center', va='center',
                    color=text_color)
    ax.legend(ncol=len(category_names), bbox_to_anchor=(0, 1),
              loc='lower left', fontsize='small')

    return fig, ax


survey(results, category_names)
#plt.savefig('Sentiment_personaggi.png')
plt.show()